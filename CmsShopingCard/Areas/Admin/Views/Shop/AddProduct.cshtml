@model CmsShopingCard.Models.ViewModels.Shop.ProductVM

@{
    ViewBag.Title = "Add Product";
}

<h2>Add Product</h2>
@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}


@using (Html.BeginForm("AddProduct", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group input-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        <div class="input-group-prepend">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control input-radius" } })
                            <span class="input-group-text span-radius">$</span>

                        </div>
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", Value = "" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2" for="CategoryId">Categories</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Select Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Brands</label>
                    <div class="col-md-10 brand_list">
                        <select name="BrandId" id="brandList" class="form-control"></select>
                    </div>
                </div>

                @*<div class="form-group">
                        <label class="form-label col-md-2" for="Description">Description</label>
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>*@



            </div>

            <div class="col-md-4" id="InputImgDiv">
                <div class="form-group">
                    <div>
                        <label class="control-label " for="ImageUpload">Choose Image</label>

                        <div id="InputDiv">
                            <input type="file" name="file" id="ImageUpload" accept="image/*" />
                        </div>
                        <img class="product-img-preview mt-2 img-thumbnail rounded" src="~/AppImg/41WojpNRS5L.png" id="ImgPreview" />
                    </div>
                </div>
            </div>


        </div>

        @* des *@
        <div class="form-group row my-4">

            <div class="col-md-11 mx-auto text-center">
                <label for="Description" class="form-label col-md-2">Description</label>

                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group d-flex justify-content-around px-1 px-sm-4">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Product" class="btn form-btn" />
            </div>
            <a class="btn btn-secondary" href="/admin/shop/products">
                Back to Pages
                <i class="fas fa-chevron-right"></i>
            </a>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to Products", "Products")
</div>


@section Scripts{
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>

    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script>
        //Set CkEditor
        /////////////////////////////////////////////////////////////
        CKEDITOR.replace("Description");
        $(function () {

            ////Preview Selected Image
            ///////////////////////////////////////////////////////////////////////
            //function readUrl(input) {
            //    if (input.files && input.files[0]) {
            //        var reader = new FileReader();

            //        reader.onload = function (e) {
            //            $("img#ImgPreview")
            //                .attr("src", e.target.result)
            //                .width(200)
            //                .height(200);
            //        }
            //        reader.readAsDataURL(input.files[0]);
            //    }
            //}

            //$("#ImageUpload").change(function () {
            //    readUrl(this);
            //});

            //Get Brands Of Category
            /////////////////////////////////////////////////////////////////////
            var categoryName;
            $("#CategoryId").change(function (e) {
                e.preventDefault();
                categoryName = $(this).val();
                console.log(categoryName);
                var url = "/Admin/Brand/GetBrandsOfCategory";
                $.get(url, { catId: categoryName }, function (data) {
                    getValue = $.parseJSON(data);
                    $('#brandList').empty();
                    for (var i = 0; i < getValue.length; i++) {
                        $("#brandList").append(new Option(getValue[i].Name, getValue[i].brandId));
                    }
                    //$("#selectList").append(new Option("option text", "value"));
                });

            });

        });
    </script>
}
